{"version":3,"sources":["webpack:///./src/i18n/redirect.js","webpack:///./node_modules/browser-lang/dist/index.js"],"names":["checkRuLanguage","lang","Redirect","props","pathname","location","window","detected","browserLang","languages","fallback","newUrl","withPrefix","replace","render","PureComponent","getBrowserLang","navigator","language","browserLanguage","userLanguage","systemLanguage","normalizeCode","code","toLowerCase","Object","defineProperty","exports","value","_default","options","match","filter","length","target","string","position","concat","slice"],"mappings":"kJAMA,IAAMA,EAAkB,SAACC,GACvB,MAAI,UAAYA,EACP,KAGFA,GAGHC,E,oBACJ,WAAYC,GAAQ,IAAD,EACjB,cAAMA,IAAN,KADiB,IAGTC,EAAaD,EAAME,SAAnBD,SAGR,GAAsB,oBAAXE,OAAwB,CACjC,IAAMC,EAAWP,EAAgBQ,IAAY,CACzCC,UAAW,CAAC,KAAM,KAAM,SACxBC,SAAU,QAGRC,EAASC,qBAAW,IAAIL,EAAWH,GACzCE,OAAOD,SAASQ,QAAQF,GAbT,S,0GAiBnBG,OAAA,WACE,OAAO,M,GAnBYC,iBAuBRb,a,iCCVf,SAASc,IACP,MAAsB,oBAAXV,OACF,KAGEA,OAAOW,UAAUR,WAAaH,OAAOW,UAAUR,UAAU,IAAMH,OAAOW,UAAUC,UAAYZ,OAAOW,UAAUE,iBAAmBb,OAAOW,UAAUG,cAAgBd,OAAOW,UAAUI,gBAAkB,KAIjN,SAASC,EAAcC,GACrB,OAAOA,EAAKC,cAAcX,QAAQ,IAAK,KAnCzC,EAAQ,IAER,EAAQ,IAER,EAAQ,IAERY,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAiB,aAAI,EA+DrB,IAAIE,EAlCJ,SAA8BC,GAC5B,IAAKA,EACH,OAAOd,IAGT,IAAIP,EAAYqB,EAAQrB,UACpBC,EAAWoB,EAAQpB,SAEvB,IAAKoB,EAAQrB,UACX,OAAOC,EAIT,IAAIS,EAAkBG,EAAcN,KAEpC,IAAKG,EACH,OAAOT,EAGT,IAAIqB,EAAQtB,EAAUuB,QAAO,SAAU/B,GACrC,OAAOqB,EAAcrB,KAAUkB,KAGjC,OAAIY,EAAME,OAAS,EACVF,EAAM,IAAMrB,EAIDD,EAAUuB,QAAO,SAAU/B,GAC7C,OAxDwBiC,EAwDWjC,EAvDjCgC,GADcE,EAwDEhB,GAvDAc,QACpBG,EAAuB,MAAZA,EAAmB,EAAIA,GAEnB,EACbA,EAAW,EACFA,EAAWH,IACpBG,EAAWH,GAGbC,EAAS,GAAGG,OAAOH,GACZC,EAAOG,MAAMF,EAAUA,EAAWF,EAAOD,SAAWC,EAX7D,IAAoBC,EAAQD,EAAQE,EAC9BH,KAyDiB,IAAMvB,GAI7BiB,EAAiB,QAAIE","file":"component---src-i-18-n-redirect-js-5aa0d7b9c36672a15efb.js","sourcesContent":["/* eslint-disable */\nimport { PureComponent } from 'react';\nimport { withPrefix } from 'gatsby-link';\nimport browserLang from 'browser-lang';\nimport { languages } from './index';\n\nconst checkRuLanguage = (lang) => {\n  if ('ru-RU' === lang) {\n    return 'ru';\n  }\n\n  return lang;\n};\n\nclass Redirect extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { pathname } = props.location;\n\n    // Skip build, Browsers only\n    if (typeof window !== 'undefined') {\n      const detected = checkRuLanguage(browserLang({\n          languages: ['en', 'ru', 'ru-RU'],\n          fallback: 'en',\n        }));\n\n      const newUrl = withPrefix(`/${detected}${pathname}`);\n      window.location.replace(newUrl);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Redirect;\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction startsWith(string, target, position) {\n  var length = string.length;\n  position = position == null ? 0 : position;\n\n  if (position < 0) {\n    position = 0;\n  } else if (position > length) {\n    position = length;\n  }\n\n  target = \"\".concat(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nfunction getBrowserLang() {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n\n  var lang = window.navigator.languages && window.navigator.languages[0] || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage || window.navigator.systemLanguage || null;\n  return lang;\n}\n\nfunction normalizeCode(code) {\n  return code.toLowerCase().replace(/-/, \"_\");\n}\n\nfunction getPreferredLanguage(options) {\n  if (!options) {\n    return getBrowserLang();\n  }\n\n  var languages = options.languages,\n      fallback = options.fallback;\n\n  if (!options.languages) {\n    return fallback;\n  } // some browsers report language as en-US instead of en_US\n\n\n  var browserLanguage = normalizeCode(getBrowserLang());\n\n  if (!browserLanguage) {\n    return fallback;\n  }\n\n  var match = languages.filter(function (lang) {\n    return normalizeCode(lang) === browserLanguage;\n  });\n\n  if (match.length > 0) {\n    return match[0] || fallback;\n  } // en == en_US\n\n\n  var matchCodeOnly = languages.filter(function (lang) {\n    return startsWith(browserLanguage, lang);\n  });\n  return matchCodeOnly[0] || fallback;\n}\n\nvar _default = getPreferredLanguage;\nexports[\"default\"] = _default;"],"sourceRoot":""}